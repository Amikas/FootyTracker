generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model FitbitActivity {
  id        String   @id @default(cuid())
  date      DateTime @unique
  duration  Int
  calories  Int
  steps     Int
  distance  Float
  lastUpdated DateTime?  @default(now())
  createdAt DateTime @default(now())
  manual Boolean @default(false)
}

model UserProfile {
  id        String   @id @default(cuid())
  username  String   @unique
  password  String   
  name      String
  age       Int?
  weightKg  Float?
  heightCm  Float?
  avatarUrl String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Goal {
  id          String   @id @default(cuid())
  userId      String
  title       String
  type        String   // 'weekly' or 'monthly'
  target      Float
  unit        String
  progress    Float    @default(0)
  completed   Boolean  @default(false)
  startDate   DateTime @default(now())
  endDate     DateTime
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model CalendarEvent {
  id          String   @id @default(cuid())
  userId      String
  title       String
  description String?
  startDate   DateTime
  endDate     DateTime
  allDay      Boolean  @default(false)
  location    String?
  color       String?  // For event color coding
  isRecurring Boolean  @default(false)
  recurrenceRule String? // RRULE format for recurring events
  reminderBefore Int? // Minutes before event to send reminder
  attachments EventAttachment[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([userId])
  @@index([startDate, endDate])
}

model EventAttachment {
  id          String   @id @default(cuid())
  eventId     String
  event       CalendarEvent @relation(fields: [eventId], references: [id], onDelete: Cascade)
  name        String
  type        String   // 'document', 'image', 'video', etc.
  url         String   // URL to the stored file
  size        Int      // File size in bytes
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([eventId])
}
